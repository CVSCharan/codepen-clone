{"ast":null,"code":"var _jsxFileName = \"/Volumes/CVS Sandisk 1TB Black/Dev Stuff/React/codepen-v2/src/context/SelectedView.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useMemo, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectedViewContext = /*#__PURE__*/createContext();\nconst SelectedViewProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedView, setSelectedView] = useState(\"top\");\n  const handleSelectedViewContent = useCallback(view => {\n    setSelectedView(view);\n  }, []);\n  const contextValue = useMemo(() => ({\n    handleSelectedViewContent,\n    selectedView\n  }), [handleSelectedViewContent, selectedView]);\n  return /*#__PURE__*/_jsxDEV(SelectedViewContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectedViewProvider, \"fmW0Rjqj/VhKJY1TZkjBf3gA29w=\");\n_c = SelectedViewProvider;\nSelectedViewProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default SelectedViewProvider;\nvar _c;\n$RefreshReg$(_c, \"SelectedViewProvider\");","map":{"version":3,"names":["React","createContext","useMemo","useState","useCallback","PropTypes","jsxDEV","_jsxDEV","SelectedViewContext","SelectedViewProvider","children","_s","selectedView","setSelectedView","handleSelectedViewContent","view","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","isRequired","$RefreshReg$"],"sources":["/Volumes/CVS Sandisk 1TB Black/Dev Stuff/React/codepen-v2/src/context/SelectedView.js"],"sourcesContent":["import React, { createContext, useMemo, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const SelectedViewContext = createContext();\n\nconst SelectedViewProvider = ({ children }) => {\n  const [selectedView, setSelectedView] = useState(\"top\");\n\n  const handleSelectedViewContent = useCallback((view) => {\n    setSelectedView(view);\n  }, []);\n\n  const contextValue = useMemo(\n    () => ({\n      handleSelectedViewContent,\n      selectedView,\n    }),\n    [handleSelectedViewContent, selectedView]\n  );\n\n  return (\n    <SelectedViewContext.Provider value={contextValue}>\n      {children}\n    </SelectedViewContext.Provider>\n  );\n};\n\nSelectedViewProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default SelectedViewProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC5E,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,MAAMC,mBAAmB,gBAAGP,aAAa,CAAC,CAAC;AAElD,MAAMQ,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMW,yBAAyB,GAAGV,WAAW,CAAEW,IAAI,IAAK;IACtDF,eAAe,CAACE,IAAI,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGd,OAAO,CAC1B,OAAO;IACLY,yBAAyB;IACzBF;EACF,CAAC,CAAC,EACF,CAACE,yBAAyB,EAAEF,YAAY,CAC1C,CAAC;EAED,oBACEL,OAAA,CAACC,mBAAmB,CAACS,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAN,QAAA,EAC/CA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC,CAAC;AAACX,EAAA,CApBIF,oBAAoB;AAAAc,EAAA,GAApBd,oBAAoB;AAsB1BA,oBAAoB,CAACe,SAAS,GAAG;EAC/Bd,QAAQ,EAAEL,SAAS,CAACoB,IAAI,CAACC;AAC3B,CAAC;AAED,eAAejB,oBAAoB;AAAC,IAAAc,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}